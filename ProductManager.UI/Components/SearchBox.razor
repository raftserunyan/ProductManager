@using System.Timers;
@implements IDisposable;

<div class="searchbox-body">
    <div class="search-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
        </svg>
    </div>
    <input type="text" @bind="Data" @bind:event="oninput" @onkeyup="@ResetTimer" placeholder="Search..." class="search-input" />
</div>

@code {
    [Parameter]
    public Func<string, Task> onElapsed { get; set; }

    public string Data { get; set; } = string.Empty;
    private Timer aTimer = default!;

    protected override void OnInitialized()
    {
        aTimer = new Timer(800);
        aTimer.Elapsed += OnUserFinish;
        aTimer.AutoReset = false;
    }

    void ResetTimer(KeyboardEventArgs e)
    {
        aTimer.Stop();
        aTimer.Start();
    }

    private async void OnUserFinish(Object? source, ElapsedEventArgs e)
    {
        await onElapsed(Data);
    }

    void IDisposable.Dispose() => aTimer?.Dispose();
}